<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Proyecto2Main</name>
    </assembly>
    <members>
        <member name="M:Proyecto2Main.Proyecto2Main.#ctor">
            <summary>
            Constructor por defecto
            </summary>
        </member>
        <member name="M:Proyecto2Main.Proyecto2Main.Proyecto2Main_Load(System.Object,System.EventArgs)">
            <summary>
            Evento que se ejecuta cuando carga el Form
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Proyecto2Main.Proyecto2Main.btnZIP_Click(System.Object,System.EventArgs)">
            <summary>
            Evento que se ejecuta cuando pulsamos el boton de comprimir
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Proyecto2Main.Proyecto2Main.btnUNZIP_Click(System.Object,System.EventArgs)">
            <summary>
            Evento que se ejecuta al pulsar el boton de descomprimir
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Proyecto2Main.Proyecto2Main.Comprimir">
            <summary>
            Metodo para comprimir todo lo que hay en la carpeta compress
            </summary>
        </member>
        <member name="M:Proyecto2Main.Proyecto2Main.Descomprimir">
            <summary>
            Metodo para descomprimir todo lo que hay en el archivo ArchivosZIP.zip
            </summary>
        </member>
        <member name="M:Proyecto2Main.Proyecto2Main.Compress(System.IO.FileInfo)">
            <summary>
            Este metodo coge el fichero lo comprime y 
            lo copia en el lugar que indiquemos
            </summary>
            <param name="fi">Objeto del archivo que vamos a comprimir</param>
        </member>
        <member name="M:Proyecto2Main.Proyecto2Main.Decompress(System.IO.FileInfo)">
            <summary>
            
            </summary>
            <param name="fi">Objeto del archivo que vamos a descomprimir</param>
        </member>
        <member name="M:Proyecto2Main.Proyecto2Main.btnGenerateArchieves_Click(System.Object,System.EventArgs)">
            <summary>
            Evento que se ejecuta cuando pulsamos el boton de generar archivos
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Proyecto2Main.Proyecto2Main.btnDescifrar_Click(System.Object,System.EventArgs)">
            <summary>
            Evento que se ejecuta cuando pulsamos el boton descomprimir
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Proyecto2Main.Proyecto2Main.EncriptarTXT">
            <summary>
            Metodo para encriptar archivos TXT
            </summary>
        </member>
        <member name="M:Proyecto2Main.Proyecto2Main.DesencriptarTXT">
            <summary>
            Metodo para desencriptar archivos TXT
            </summary>
        </member>
        <member name="M:Proyecto2Main.Proyecto2Main.crearLetras(System.Int32)">
            <summary>
            Metodo para crear un millon de letras aleatoriamente
            </summary>
            <param name="numeroFitxer">numero de fichero que estamos creando</param>
            <returns></returns>
        </member>
        <member name="M:Proyecto2Main.Proyecto2Main.codiLetra">
            <summary>
            Bonfire
            </summary>
            <returns></returns>
        </member>
        <member name="M:Proyecto2Main.Proyecto2Main.XifrarLetraNum(System.String[],System.Int32)">
            <summary>
            
            </summary>
            <param name="crearLletres"></param>
            <param name="z"></param>
        </member>
        <member name="M:Proyecto2Main.Proyecto2Main.crearFicheros">
            <summary>
            Metodo para crear ficheros con letras generadas aleatoriamente,
            para ello declaramos un array donde vamos a guardar las letras, y 
            luego hacemos un for en el cual indicamos que se haga 5 veces y 
            llamamos al metodo para crear el fichero, de esta forma se nos van 
            a crear 5 ficheros con 1000000 de letras cada uno
            </summary>
        </member>
        <member name="F:Proyecto2Main.Proyecto2Main.components">
            <summary>
            Variable del diseñador necesaria.
            </summary>
        </member>
        <member name="M:Proyecto2Main.Proyecto2Main.Dispose(System.Boolean)">
            <summary>
            Limpiar los recursos que se estén usando.
            </summary>
            <param name="disposing">true si los recursos administrados se deben desechar; false en caso contrario.</param>
        </member>
        <member name="M:Proyecto2Main.Proyecto2Main.InitializeComponent">
            <summary>
            Método necesario para admitir el Diseñador. No se puede modificar
            el contenido de este método con el editor de código.
            </summary>
        </member>
        <member name="M:Proyecto2Main.Program.Main">
            <summary>
            Punto de entrada principal para la aplicación.
            </summary>
        </member>
        <member name="T:Proyecto2Main.RepublicSystemDataSet">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="T:Proyecto2Main.RepublicSystemDataSet.DeliveryDataDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Proyecto2Main.RepublicSystemDataSet.InnerEncryptionDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Proyecto2Main.RepublicSystemDataSet.InnerEncryptionDataDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Proyecto2Main.RepublicSystemDataSet.PlanetKeysDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Proyecto2Main.RepublicSystemDataSet.PlanetsDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Proyecto2Main.RepublicSystemDataSet.SpaceShipsDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Proyecto2Main.RepublicSystemDataSet.DeliveryDataRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Proyecto2Main.RepublicSystemDataSet.InnerEncryptionRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Proyecto2Main.RepublicSystemDataSet.InnerEncryptionDataRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Proyecto2Main.RepublicSystemDataSet.PlanetKeysRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Proyecto2Main.RepublicSystemDataSet.PlanetsRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Proyecto2Main.RepublicSystemDataSet.SpaceShipsRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Proyecto2Main.RepublicSystemDataSet.DeliveryDataRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Proyecto2Main.RepublicSystemDataSet.InnerEncryptionRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Proyecto2Main.RepublicSystemDataSet.InnerEncryptionDataRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Proyecto2Main.RepublicSystemDataSet.PlanetKeysRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Proyecto2Main.RepublicSystemDataSet.PlanetsRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Proyecto2Main.RepublicSystemDataSet.SpaceShipsRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Proyecto2Main.RepublicSystemDataSetTableAdapters.DeliveryDataTableAdapter">
             <summary>
            Represents the connection and commands used to retrieve and save data.
            </summary>
        </member>
        <member name="T:Proyecto2Main.RepublicSystemDataSetTableAdapters.InnerEncryptionTableAdapter">
             <summary>
            Represents the connection and commands used to retrieve and save data.
            </summary>
        </member>
        <member name="T:Proyecto2Main.RepublicSystemDataSetTableAdapters.InnerEncryptionDataTableAdapter">
             <summary>
            Represents the connection and commands used to retrieve and save data.
            </summary>
        </member>
        <member name="T:Proyecto2Main.RepublicSystemDataSetTableAdapters.PlanetKeysTableAdapter">
             <summary>
            Represents the connection and commands used to retrieve and save data.
            </summary>
        </member>
        <member name="T:Proyecto2Main.RepublicSystemDataSetTableAdapters.PlanetsTableAdapter">
             <summary>
            Represents the connection and commands used to retrieve and save data.
            </summary>
        </member>
        <member name="T:Proyecto2Main.RepublicSystemDataSetTableAdapters.SpaceShipsTableAdapter">
             <summary>
            Represents the connection and commands used to retrieve and save data.
            </summary>
        </member>
        <member name="T:Proyecto2Main.RepublicSystemDataSetTableAdapters.TableAdapterManager">
             <summary>
            TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
            </summary>
        </member>
        <member name="M:Proyecto2Main.RepublicSystemDataSetTableAdapters.TableAdapterManager.UpdateUpdatedRows(Proyecto2Main.RepublicSystemDataSet,System.Collections.Generic.List{System.Data.DataRow},System.Collections.Generic.List{System.Data.DataRow})">
             <summary>
            Update rows in top-down order.
            </summary>
        </member>
        <member name="M:Proyecto2Main.RepublicSystemDataSetTableAdapters.TableAdapterManager.UpdateInsertedRows(Proyecto2Main.RepublicSystemDataSet,System.Collections.Generic.List{System.Data.DataRow})">
             <summary>
            Insert rows in top-down order.
            </summary>
        </member>
        <member name="M:Proyecto2Main.RepublicSystemDataSetTableAdapters.TableAdapterManager.UpdateDeletedRows(Proyecto2Main.RepublicSystemDataSet,System.Collections.Generic.List{System.Data.DataRow})">
             <summary>
            Delete rows in bottom-up order.
            </summary>
        </member>
        <member name="M:Proyecto2Main.RepublicSystemDataSetTableAdapters.TableAdapterManager.GetRealUpdatedRows(System.Data.DataRow[],System.Collections.Generic.List{System.Data.DataRow})">
             <summary>
            Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
            </summary>
        </member>
        <member name="M:Proyecto2Main.RepublicSystemDataSetTableAdapters.TableAdapterManager.UpdateAll(Proyecto2Main.RepublicSystemDataSet)">
             <summary>
            Update all changes to the dataset.
            </summary>
        </member>
        <member name="T:Proyecto2Main.RepublicSystemDataSetTableAdapters.TableAdapterManager.UpdateOrderOption">
             <summary>
            Update Order Option
            </summary>
        </member>
        <member name="T:Proyecto2Main.RepublicSystemDataSetTableAdapters.TableAdapterManager.SelfReferenceComparer">
             <summary>
            Used to sort self-referenced table's rows
            </summary>
        </member>
        <member name="T:Proyecto2Main.Properties.Resources">
            <summary>
              Clase de recurso fuertemente tipado para buscar cadenas traducidas, etc.
            </summary>
        </member>
        <member name="P:Proyecto2Main.Properties.Resources.ResourceManager">
            <summary>
              Devuelve la instancia ResourceManager almacenada en caché utilizada por esta clase.
            </summary>
        </member>
        <member name="P:Proyecto2Main.Properties.Resources.Culture">
            <summary>
              Invalida la propiedad CurrentUICulture del subproceso actual para todas las
              búsquedas de recursos usando esta clase de recursos fuertemente tipados.
            </summary>
        </member>
    </members>
</doc>
